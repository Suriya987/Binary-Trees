Time complexity :  O(2N)
Space complexity : O(N)

#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node* left;
    Node* right;
    Node(int val)
    {
        data=val;
        left=right=NULL;
    }
};

void print(Node* root)
{
    stack<Node* >st;
    
    Node* curr=root;
    vector<int>ans;
    
    while(true)
    {
        if(curr!=NULL)
        {
            st.push(curr);
            curr=curr->left;
        }
        else
        {
            Node* temp=st.top()->right;
            if(temp==NULL)
            {
                temp=st.top();
                ans.push_back(temp->data);
                st.pop();
                //for printing root
                while(!st.empty() && temp==st.top()->right)
                {
                    temp=st.top();
                    ans.push_back(temp->data);
                    st.pop();
                }
            }
            else
            {
                curr=temp;
            }
            
        }
        if(st.empty())  break;
    }
    
    for(int i=0;i<ans.size();i++)
     cout<<ans[i]<<" ";
    
}

int main()
{
    Node* root=new Node(1);
    root->left=new Node(2);
    root->right=new Node(7);
    root->left->left=new Node(3);
    root->left->left->right=new Node(4);
    root->left->left->right->right=new Node(5);
    root->left->left->right->right->right=new Node(6);
    root->right->left=new Node(8);
    
    print(root);
    return 0;
}
