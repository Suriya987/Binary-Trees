You are given the root of a binary tree. We install cameras on the tree nodes where each camera at a node can monitor its parent, itself, and its immediate children.

Return the minimum number of cameras needed to monitor all nodes of the tree.

class Solution {
public:
    int helper(TreeNode* root,int &cameraNo)
    {
        if(root==NULL)  return 0;

        int left=helper(root->left,cameraNo);
        int right=helper(root->right,cameraNo);
         if(left==-1 || right==-1){
          cameraNo+=1;
          return 1;
        }
        if(left==1 || right==1)
          return 0;
       
        if(left==0 && right!=0  || left!=0 && right==0){
        cameraNo+=1;
        return 1;
        }

        return -1;
    }
    int minCameraCover(TreeNode* root) {
        
           int cameraNo=0;
           int res=helper(root,cameraNo);
           if(res==-1)
             return cameraNo+1;

           return cameraNo;
    }
};
